{"version":3,"sources":["connector/connector.js","hooks/web3.js","utils/index.js","transaction/ErrorMessage.js","transaction/TxList.js","state/hooks.js","state/transactions/actions.js","state/transactions/hooks.jsx","components/accountDetails.jsx","constants/chains.js","App.js","hook.js","reportWebVitals.js","state/application/actions.js","state/application/reducer.js","state/transactions/reducer.js","state/index.js","state/application/updater.js","hooks/useDebounce.js","utils/retry.js","state/transactions/updater.jsx","state/application/hooks.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","useActiveWeb3React","context","useWeb3React","contextNetwork","active","isAddress","value","getAddress","shortenAddress","address","chars","parsed","Error","substring","ErrorMessage","message","className","xmlns","fill","viewBox","d","TxList","txs","length","map","item","hash","useAppDispatch","useDispatch","useAppSelector","useSelector","addTransaction","createAction","finalizeTransaction","checkedTransaction","useAllTransactions","chainId","state","transactions","isTransactionRecent","tx","Date","getTime","addedTime","Icons","styled","div","Transaction","allTransactions","info","pending","receipt","success","status","useEffect","console","log","JSON","stringify","type","currencyAmount","from","to","String","fromCodePoint","SupportedChainId","CHAIN_INFO","blockWaitMsBeforeWarning","bridge","docs","explorer","infoLink","label","nativeCurrency","name","symbol","decimals","rpcUrls","statusPage","isZero","hexNumberString","test","swapErrorToUserReadableMessage","error","reason","Boolean","data","originalError","indexOf","substr","newTransactionsFirst","a","b","TransactionListWrapper","renderTransactions","i","App","account","library","connector","activate","deactivate","useState","balance","setBalance","networkInfo","undefined","dispatch","useCallback","response","useTransactionAdder","sortedRecentTransactions","useMemo","Object","values","filter","sort","confirmed","uncheckedAddresses","addresses","getBalance","getDefaultProvider","then","balanceInEth","formatEther","catch","err","useETHBalances","hasPendingTransactions","ex","startPayment","setError","setTxs","ether","addr","window","ethereum","send","parseUnits","signer","getSigner","sendTransaction","gasLimit","BigNumber","toHexString","code","handleSubmit","e","preventDefault","FormData","target","get","onClick","slice","onSubmit","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateBlockNumber","createReducer","blockNumber","builder","addCase","action","payload","Math","max","now","lastCheckedBlockNumber","confirmedTime","store","configureStore","reducer","application","setupListeners","Updater","setState","blockNumberCallback","getBlockNumber","on","removeListener","debouncedState","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","waitRandom","min","ms","round","random","Promise","resolve","CancelledError","isCancelledError","RetryableError","isRetryableError","RETRY_OPTIONS_BY_CHAIN_ID","n","minWait","maxWait","DEFAULT_RETRY_OPTIONS","lastBlockNumber","useBlockNumber","getReceipt","fn","rejectCancelled","completed","promise","reject","result","cancel","retry","getTransactionReceipt","debug","cancels","keys","blocksSinceCheck","minutesPending","shouldCheck","blockHash","contractAddress","transactionHash","transactionIndex","forEach","Web3ProviderNetwork","createWeb3ReactRoot","getLibrary","provider","Web3Provider","Updaters","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa0142b1.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\nexport const injected = new InjectedConnector({supportedChainIds: [1,3,4,5,42]})","import { Web3Provider } from '@ethersproject/providers'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { injected } from '../connector/connector'\n\n// const NetworkContextName = 'NETWORK'\n// export const IS_IN_IFRAME = window.parent !== window\n\nexport function useActiveWeb3React() {\n    const context = useWeb3React()\n    const contextNetwork = useWeb3React('NETWORK')\n    // console.log(\"Context: \"+!!context)\n    // console.log(\"ContextNetwork: \"+contextNetwork)\n\n    return context.active ? context : contextNetwork\n}\n\nexport function useEagerConnect() {\n    const { activate, active } = useWeb3React()\n    const [tried, setTried] = useState(false)\n\n    useEffect(() => {\n        injected.isAuthorized().then((isAuthorized) => {\n        if (isAuthorized) {\n            activate(injected, undefined, true).catch(() => {\n            setTried(true)\n            })\n        } else {\n            setTried(true)\n        }\n        })\n    }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n    // if the connection worked, wait until we get confirmation of that to flip the flag\n    useEffect(() => {\n        if (!tried && active) {\n        setTried(true)\n        }\n    }, [tried, active])\n\n    return tried\n}\n\nexport function useInactiveListener(suppress = false) {\n    const { active, error, activate } = useWeb3React()\n\n    useEffect(() => {\n        const { ethereum } = window\n\n        const paramTable = {\n            'ethereum': !!ethereum,\n            'ethereum.on' : !!ethereum.on,\n            '!active': !active,\n            '!error': !error,\n            '!suppress': !suppress\n        }\n        console.table(paramTable)\n\n        if (ethereum && ethereum.on && !active && !error && !suppress) {\n            // const handleConnect = () => {\n            //     console.log(\"Handling 'connect' event\")\n            //     activate(injected)\n            // }\n            const handleChainChanged = (chainId) => {\n                console.log(\"Handling 'chainChanged' event with payload\", chainId)\n                activate(injected)\n            }\n            const handleAccountsChanged = (accounts) => {\n                console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n                if (accounts.length > 0) {\n                activate(injected)\n                }\n            }\n            // const handleNetworkChanged = (networkId) => {\n            //     console.log(\"Handling 'networkChanged' event with payload\", networkId)\n            //     activate(injected)\n            // }\n\n            // ethereum.on('connect', handleConnect)\n            ethereum.on('chainChanged', handleChainChanged)\n            ethereum.on('accountsChanged', handleAccountsChanged)\n            // ethereum.on('networkChanged', handleNetworkChanged)\n            console.log('check ethereum on')\n            return () => {\n                if (ethereum.removeListener) {\n                    console.log('check ethereum close')\n                    // ethereum.removeListener('connect', handleConnect)\n                    ethereum.removeListener('chainChanged', handleChainChanged)\n                    ethereum.removeListener('accountsChanged', handleAccountsChanged)\n                    // ethereum.removeListener('networkChanged', handleNetworkChanged)\n                }\n            }\n        }\n        return undefined\n    }, [active, error, suppress, activate])\n}","\nimport { getAddress } from '@ethersproject/address'\n\nexport function isAddress(value) {\n    try {\n        return getAddress(value)\n    } catch {\n        return false\n    }\n}\n  \nexport function shortenAddress(address, chars = 4) {\n    const parsed = isAddress(address)\n    if (!parsed) {\n        throw Error(`Invalid 'address' parameter '${address}'.`)\n    }\n    return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}","export default function ErrorMessage({ message }) {\n    if (!message) return null;\n  \n    return (\n      <div className=\"alert alert-error mt-5\">\n        <div className=\"flex-1\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            className=\"w-6 h-6 mx-2 stroke-current\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"\n            ></path>\n          </svg>\n          <label>{message}</label>\n        </div>\n      </div>\n    );\n  }\n  ","export default function TxList({ txs }) {\n    if (txs.length === 0) return null;\n\n    return (\n        <>\n        {txs.map((item) => (\n            <div key={item} className=\"alert alert-info mt-5\">\n            <div className=\"flex-1\">\n                <label>{item.hash}</label>\n            </div>\n            </div>\n        ))}\n        </>\n    );\n}","import { useDispatch, useSelector } from 'react-redux'\n\n\nexport const useAppDispatch = () => useDispatch()\nexport const useAppSelector = useSelector","import { createAction } from '@reduxjs/toolkit'\n\nexport const addTransaction = createAction('transactions/addTransaction')\nexport const finalizeTransaction = createAction('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction('transactions/checkedTransaction')","// import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector} from '../hooks'\n\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { addTransaction } from './actions'\n// import { TransactionDetails } from './reducer'\n\nexport function useTransactionAdder() {\n    const { chainId, account } = useActiveWeb3React()\n    const dispatch = useAppDispatch()\n  \n    return useCallback(\n      (response, info) => {\n        if (!account) return\n        if (!chainId) return\n  \n        const { hash } = response\n        if (!hash) {\n          throw Error('No transaction hash found.')\n        }\n        dispatch(addTransaction({ hash, from: account, info, chainId }))\n      },\n      [dispatch, chainId, account]\n    )\n}\n\nexport function useAllTransactions() {\n    const { chainId } = useActiveWeb3React()\n  \n    const state = useAppSelector((state) => state.transactions)\n  \n    return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function isTransactionRecent(tx) {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}","import { useEffect } from \"react\"\nimport { useActiveWeb3React } from \"../hooks/web3\"\nimport { useAllTransactions } from \"../state/transactions/hooks\"\nimport { parseEther } from \"@ethersproject/units\"\nimport { shortenAddress } from \"../utils\"\nimport styled from 'styled-components'\n\nconst Icons = styled.div`\n    padding-left: 10px;\n`\n\nexport default function Transaction({ hash }) {\n    const { chainId } = useActiveWeb3React()\n    const allTransactions = useAllTransactions()\n  \n    const tx = allTransactions?.[hash]\n    const info = tx?.info\n    const pending = !tx?.receipt\n    const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n  \n    useEffect(() => {\n        console.log(\"Pending: \" + JSON.stringify(pending))\n      },[pending])    \n\n    if (!chainId) return null\n  \n    return (\n      <>\n        <div\n        //   href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)}\n          pending={pending}\n          success={success}\n          className = \"row-div\"\n        >\n          <div>\n              <span>{info?.type}: {info?.currencyAmount} ETH from \"{shortenAddress(info?.from)}\" to \"{shortenAddress(info?.to)}\" </span>\n          </div>\n          <Icons>\n            {pending ? <span>{String.fromCodePoint('0x1F916')}pending...</span> : success ? <span>{String.fromCodePoint('0x1F44C')}</span> : <span>{String.fromCodePoint('0x1F631')}</span>}\n          </Icons>\n        </div>\n      </>\n    )\n  }","import ms from \"ms.macro\"\n\nconst SupportedChainId =  {\n    MAINNET: 1,\n    ROPSTEN : 3,\n    RINKEBY : 4,\n    GOERLI : 5,\n    KOVAN : 42,\n  \n    ARBITRUM_ONE : 42161,\n    ARBITRUM_RINKEBY : 421611,\n    OPTIMISM : 10,\n    OPTIMISTIC_KOVAN : 69,\n}\n\nexport const CHAIN_INFO = {\n    [SupportedChainId.ARBITRUM_ONE]: {\n      blockWaitMsBeforeWarning: ms`10m`,\n      bridge: 'https://bridge.arbitrum.io/',\n      docs: 'https://offchainlabs.com/',\n      explorer: 'https://arbiscan.io/',\n      infoLink: 'https://info.uniswap.org/#/arbitrum',\n      label: 'Arbitrum',\n      nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 },\n      rpcUrls: ['https://arb1.arbitrum.io/rpc'],\n    },\n    [SupportedChainId.ARBITRUM_RINKEBY]: {\n      blockWaitMsBeforeWarning: ms`10m`,\n      bridge: 'https://bridge.arbitrum.io/',\n      docs: 'https://offchainlabs.com/',\n      explorer: 'https://rinkeby-explorer.arbitrum.io/',\n      infoLink: 'https://info.uniswap.org/#/arbitrum/',\n      label: 'Arbitrum Rinkeby',\n      nativeCurrency: { name: 'Rinkeby ArbETH', symbol: 'rinkArbETH', decimals: 18 },\n      rpcUrls: ['https://rinkeby.arbitrum.io/rpc'],\n    },\n    [SupportedChainId.MAINNET]: {\n      docs: 'https://docs.uniswap.org/',\n      explorer: 'https://etherscan.io/',\n      infoLink: 'https://info.uniswap.org/#/',\n      label: 'Ethereum',\n      nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 },\n    },\n    [SupportedChainId.RINKEBY]: {\n      docs: 'https://docs.uniswap.org/',\n      explorer: 'https://rinkeby.etherscan.io/',\n      infoLink: 'https://info.uniswap.org/#/',\n      label: 'Rinkeby',\n      nativeCurrency: { name: 'Rinkeby ETH', symbol: 'rinkETH', decimals: 18 },\n    },\n    [SupportedChainId.ROPSTEN]: {\n      docs: 'https://docs.uniswap.org/',\n      explorer: 'https://ropsten.etherscan.io/',\n      infoLink: 'https://info.uniswap.org/#/',\n      label: 'Ropsten',\n      nativeCurrency: { name: 'Ropsten ETH', symbol: 'ropETH', decimals: 18 },\n    },\n    [SupportedChainId.KOVAN]: {\n      docs: 'https://docs.uniswap.org/',\n      explorer: 'https://kovan.etherscan.io/',\n      infoLink: 'https://info.uniswap.org/#/',\n      label: 'Kovan',\n      nativeCurrency: { name: 'Kovan ETH', symbol: 'kovETH', decimals: 18 },\n    },\n    [SupportedChainId.GOERLI]: {\n      docs: 'https://docs.uniswap.org/',\n      explorer: 'https://goerli.etherscan.io/',\n      infoLink: 'https://info.uniswap.org/#/',\n      label: 'Görli',\n      nativeCurrency: { name: 'Görli ETH', symbol: 'görETH', decimals: 18 },\n    },\n    [SupportedChainId.OPTIMISM]: {\n      blockWaitMsBeforeWarning: ms`10m`,\n      bridge: 'https://gateway.optimism.io/',\n      docs: 'https://optimism.io/',\n      explorer: 'https://optimistic.etherscan.io/',\n      infoLink: 'https://info.uniswap.org/#/optimism',\n      label: 'OΞ',\n      nativeCurrency: { name: 'Optimistic ETH', symbol: 'ETH', decimals: 18 },\n      rpcUrls: ['https://mainnet.optimism.io'],\n      statusPage: 'https://optimism.io/status',\n    },\n    [SupportedChainId.OPTIMISTIC_KOVAN]: {\n      blockWaitMsBeforeWarning: ms`10m`,\n      bridge: 'https://gateway.optimism.io/',\n      docs: 'https://optimism.io/',\n      explorer: 'https://optimistic.etherscan.io/',\n      infoLink: 'https://info.uniswap.org/#/optimism',\n      label: 'Optimistic Kovan',\n      rpcUrls: ['https://kovan.optimism.io'],\n      nativeCurrency: { name: 'Optimistic kovETH', symbol: 'kovOpETH', decimals: 18 },\n      statusPage: 'https://optimism.io/status',\n    },\n  }","import { useWeb3React } from '@web3-react/core'\n// import { useEagerConnect, useInactiveListener } from './hook';\nimport { t } from '@lingui/macro'\nimport { injected } from './connector/connector'\nimport { useActiveWeb3React, useEagerConnect, useInactiveListener } from './hooks/web3';\nimport { useEffect, useMemo, useState } from 'react'\nimport { useETHBalances } from './hook';\n// import { Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { parseUnits } from '@ethersproject/units'\nimport ErrorMessage from './transaction/ErrorMessage';\nimport TxList from './transaction/TxList'\nimport { useTransactionAdder, useAllTransactions, isTransactionRecent } from './state/transactions/hooks';\nimport { shortenAddress, isAddress } from './utils';\nimport styled from 'styled-components'\nimport Transaction from './components/accountDetails';\nimport { CHAIN_INFO } from './constants/chains';\n\nimport './App.css';\n\nconst NetworkContextName = 'NETWORK'\n\nfunction isZero(hexNumberString) {\n  return /^0x0*$/.test(hexNumberString)\n}\n\nfunction swapErrorToUserReadableMessage(error) {\n  let reason = \"\"\n  while (Boolean(error)) {\n    reason = error.reason ?? error.message ?? reason\n    error = error.error ?? error.data?.originalError\n  }\n\n  if (reason?.indexOf('execution reverted: ') === 0) reason = reason.substr('execution reverted: '.length)\n\n  switch (reason) {\n    case 'TransferHelper: TRANSFER_FROM_FAILED':\n      return t`The input token cannot be transferred. There may be an issue with the input token.`\n    case 'Too little received':\n    case 'Too much requested':\n    case 'STF':\n      return t`This transaction will not succeed due to price movement. Try increasing your slippage tolerance. Note: fee on transfer and rebase tokens are incompatible with Uniswap V3.`\n    case 'TF':\n      return t`The output token cannot be transferred. There may be an issue with the output token. Note: fee on transfer and rebase tokens are incompatible with Uniswap V3.`\n    default:\n      if (reason?.indexOf('undefined is not an object') !== -1) {\n        console.error(error, reason)\n        return t`An error occurred when trying to execute this swap. You may need to increase your slippage tolerance. If that does not work, there may be an incompatibility with the token you are trading. Note: fee on transfer and rebase tokens are incompatible with Uniswap V3.`\n      }\n      return t`Unknown error${\n        reason ? `: \"${reason}\"` : ''\n      }. Try increasing your slippage tolerance. Note: fee on transfer and rebase tokens are incompatible with Uniswap V3.`\n  }\n}\n\nfunction newTransactionsFirst(a, b) {\n  return b.addedTime - a.addedTime\n}\n\nconst TransactionListWrapper = styled.div`\n  display:flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n`\n\nfunction renderTransactions(transactions) {\n  return (\n    <TransactionListWrapper>\n      {transactions.map((hash, i) => {\n        return <Transaction key={i} hash={hash} />\n      })}\n    </TransactionListWrapper>\n  )\n}\n\nfunction Web3ReactManager({ children }) {\n  console.log('check 01')\n  const { active } = useWeb3React()\n  const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React(NetworkContextName)\n\n  console.log(networkActive)\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n  console.log(triedEager)\n  // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\n  useEffect(() => {\n    if (triedEager && !networkActive && !networkError && !active) {\n      activateNetwork(injected)\n    }\n  }, [triedEager, networkActive, networkError, activateNetwork, active])\n\n  console.log('check 03')\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n  useInactiveListener(!triedEager)\n\n  console.log('check 04')\n  // if the account context isn't active, and there's an error on the network context, it's an irrecoverable error\n  if (triedEager && !active && networkError) {\n    return (\n      <span>\n        Oops! An unknown error occurred. Please refresh the page, or visit from another browser or device.\n      </span>\n    )\n  }\n\n  return children\n}\n\nfunction App() {\n  // const testResult = useActiveWeb3React()\n  const { active, account, library, connector, chainId, activate, deactivate } = useWeb3React()\n  const [balance, setBalance] = useState()\n  // const contextNetwork = useWeb3React<Web3Provider>('NETWORK')\n  const networkInfo = chainId ? CHAIN_INFO[chainId] : undefined\n\n  const addTransaction = useTransactionAdder()\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    console.log(\"All Transactions: \" + JSON.stringify(allTransactions))\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt).map((tx) => tx.hash)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt).map((tx) => tx.hash)\n\n  useETHBalances(account ? [account] : [], pending, setBalance)\n\n  const hasPendingTransactions = !!pending.length\n\n  // useEffect(() => {\n  //   console.log(\"networkInfo: \" + JSON.stringify(networkInfo))\n  // },[networkInfo])\n\n  async function connect() {\n    try {\n      await activate(injected)\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n\n  async function disconnect() {\n    try {\n      deactivate()\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n\n  const startPayment = async ({ setError, setTxs, addTransaction, ether, addr }) => {\n    try {\n      if (!window.ethereum)\n        throw new Error(\"No crypto wallet found. Please install it.\");\n      console.log('check 01')\n      await window.ethereum.send(\"eth_requestAccounts\");\n\n\n      console.log('check 02 ether: ' + ether)\n      const value = parseUnits(ether, 18);\n      console.log('Value Hex:' + value)\n      // const { account, chainId, library } = useActiveWeb3React()\n      // const provider = new Web3Provider(window.ethereum);\n      const signer = library.getSigner();\n      console.log('isZero: ' + isZero(value))\n\n      // library.getAddress(addr);\n      const tx = signer.sendTransaction({\n        from: account,\n        to: addr,\n        gasLimit: BigNumber.from('21000').toHexString(),\n        ...(value && !isZero(value) ? { value } : {}),\n      })\n      .then((response) => {\n        console.log({ value, addr })\n        addTransaction(\n          response,\n          {\n            type: 'Payment',\n            from: account,\n            to: addr,\n            currencyAmount: ether\n          }\n        )\n        // return response.hash\n      })\n      .catch((error) => {\n        // if the user rejected the tx, pass this along\n        if (error?.code === 4001) {\n          throw new Error('Transaction rejected.')\n        } else {\n          // otherwise, the error was unexpected and we need to convey that\n          console.error(`Demo Trans Failed`, error, addr, value)\n\n          throw new Error(`Demo Trans failed: ${swapErrorToUserReadableMessage(error)}`)\n        }\n      })\n      console.log(\"tx\", tx);\n      setTxs([tx]);\n      console.log('check 03')\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const [error, setError] = useState();\n  const [txs, setTxs] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    setError();\n\n    await startPayment({\n      setError,\n      setTxs,\n      addTransaction,\n      ether: data.get(\"ether\"),\n      addr: data.get(\"addr\"),\n    });\n  };\n\n  return (\n    // <Web3ReactManager>\n      <div className=\"main-div\" >\n        <button onClick={connect} >Connect to MetaMask</button>\n        <br/>\n        { connector && networkInfo? \n          <div>\n            <span>{networkInfo.label}</span>\n          </div>\n          : null\n        }\n        { connector && balance ?\n          <div>\n            <span>{balance?.slice(0,9)} ETH</span>\n          </div>\n          : null\n        }\n        {\n          connector ?\n          hasPendingTransactions ? \n          <div>\n            <span>Pending ... </span>\n          </div>\n          :\n          <div className=\"main-div\">\n            <div>\n              <span>Connected with </span>\n              <span><b>{shortenAddress(account)}</b></span>\n            </div>\n          </div>\n          : <span>Not connected</span>\n        }\n        <br/>\n        <button onClick={disconnect} >Disconnect</button>｀\n\n        <form onSubmit={handleSubmit}>\n        <div className=\"main-div\">\n          <main>\n            <h1>\n              Send ETH payment\n            </h1>\n            <div className=\"main-div\">\n              <div >\n                <input\n                  type=\"text\"\n                  name=\"addr\"\n                  placeholder=\"Recipient Address\"\n                />\n              </div>\n              <div>\n                <input\n                  name=\"ether\"\n                  type=\"text\"\n                  placeholder=\"Amount in ETH\"\n                />\n              </div>\n            </div>\n          </main>\n          <footer className=\"main-div\">\n            <button\n              type=\"submit\"\n            >\n              Pay now\n            </button>\n            <ErrorMessage message={error} />\n            <TxList txs={txs} />\n          </footer>\n        </div>\n      </form>\n\n        <div className=\"main-div\">\n          {!!pending.length || !!confirmed.length ?(\n            <>\n              <h1>Recent Transactions</h1>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ):\n            <>\n              <h3>Your transactions will appear here...</h3>\n            </>\n          }\n        </div>\n\n      </div>\n    // </Web3ReactManager>\n  );\n}\n\nexport default App;\n","import { useMemo, useState } from 'react'\nimport { useActiveWeb3React } from './hooks/web3'\nimport { isAddress } from './utils'\nimport { formatEther } from '@ethersproject/units'\nimport { getDefaultProvider } from '@ethersproject/providers'\n\nexport function useETHBalances(uncheckedAddresses, pending, setBalance) {\n  const { library, chainId } = useActiveWeb3React()\n\n  const addresses = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a) => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses]\n  )\n\n  const getBalance = async ({library, addresses, chainId}) => {\n    if (library && addresses[0]) {\n      const provider = getDefaultProvider(chainId)\n      provider.getBalance(addresses[0]).then((balance) => {\n        // console.log('check01')\n        const balanceInEth = formatEther(balance)\n        setBalance(balanceInEth)\n      })\n      .catch((err) => { console.log(err) })\n    }\n  }\n\n  return useMemo(\n    () => {\n      getBalance({library, addresses, chainId})\n    },\n    [library, chainId, pending]\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const updateBlockNumber = createAction('application/updateBlockNumber')","import { createReducer, nanoid } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nconst initialState = {\n    blockNumber: {},\n    chainId: null,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // .addCase(updateChainId, (state, action) => {\n    //   const { chainId } = action.payload\n    //   state.chainId = chainId\n    // })\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n)","import { createReducer } from '@reduxjs/toolkit'\n\nimport { \n    addTransaction,\n    checkedTransaction,\n    finalizeTransaction\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport const initialState = {}\nexport default createReducer(initialState, (builder) => {\n    builder\n        .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, info } }) => {\n            if (transactions[chainId]?.[hash]) {\n                throw Error('Attempted to add existing transaction.')\n            }\n            const txs = transactions[chainId] ?? {}\n            txs[hash] = { hash, info, from, addedTime: now() }\n            transactions[chainId] = txs\n        })\n        .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n            const tx = transactions[chainId]?.[hash]\n            if (!tx) {\n                return\n            }\n            if (!tx.lastCheckedBlockNumber) {\n                tx.lastCheckedBlockNumber = blockNumber\n            } else {\n                tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n            }\n        })\n        .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n            const tx = transactions[chainId]?.[hash]\n            if (!tx) {\n                return\n            }\n            tx.receipt = receipt\n            tx.confirmedTime = now()\n        })\n})","import { configureStore } from '@reduxjs/toolkit'\nimport { setupListeners } from '@reduxjs/toolkit/query/react'\n// import { load, save } from 'redux-localstorage-simple'\nimport { createAction } from '@reduxjs/toolkit'\nimport application from './application/reducer'\nimport transactions from './transactions/reducer'\n\nconst store = configureStore({\n    reducer: {\n        // user,\n        application,\n        transactions,\n    }\n})\n\nstore.dispatch(createAction('global/updateVersion'))\n\nsetupListeners(store.dispatch)\n\nexport default store","import { useActiveWeb3React } from '../../hooks/web3'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '../hooks'\nimport { useDebounce } from '../../hooks/useDebounce'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater() {\n    const { account, chainId, library } = useActiveWeb3React()\n    const dispatch = useAppDispatch()\n\n    const [state, setState] = useState({\n        chainId,\n        blockNumber: null,\n    })\n\n    const blockNumberCallback = useCallback(\n        (blockNumber) => {\n            setState((state) => {\n            if (chainId === state.chainId) {\n                if (typeof state.blockNumber !== 'number') return { chainId, blockNumber }\n                return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) }\n            }\n            return state\n            })\n        },\n        [chainId, setState]\n    )\n\n    useEffect(() => {\n        if (!library || !chainId) return undefined\n\n        setState({ chainId, blockNumber: null })\n\n        library\n            .getBlockNumber()\n            .then(blockNumberCallback)\n            .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n        library.on('block', blockNumberCallback)\n        return () => {\n            library.removeListener('block', blockNumberCallback)\n        }\n    }, [dispatch, chainId, library, blockNumberCallback])\n\n    const debouncedState = useDebounce(state, 100)\n\n    useEffect(() => {\n        if (!debouncedState.chainId || !debouncedState.blockNumber) return\n        dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n    }, [dispatch, debouncedState.blockNumber, debouncedState.chainId])\n    \n    // useEffect(() => {\n    //     dispatch(\n    //         updateChainId({ chainId: debouncedState.chainId ? supportedChainId(debouncedState.chainId) ?? null : null })\n    //     )\n    // }, [dispatch, debouncedState.chainId])\n\n    return null\n}","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","function wait(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms))\n  }\n  \n  function waitRandom(min, max) {\n    return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n  }\n  \n  /**\n   * This error is thrown if the function is cancelled before completing\n   */\n  class CancelledError extends Error {\n    isCancelledError = true\n    constructor() {\n      super('Cancelled')\n    }\n  }\n  \n  /**\n   * Throw this error if the function should retry\n   */\n  export class RetryableError extends Error {\n    isRetryableError = true\n  }\n  \n  /**\n   * Retries the function that returns the promise until the promise successfully resolves up to n retries\n   * @param fn function to retry\n   * @param n how many times to retry\n   * @param minWait min wait between retries in ms\n   * @param maxWait max wait between retries in ms\n   */\n  export function retry(\n    fn,\n    { n, minWait, maxWait }\n  ){\n    let completed = false\n    let rejectCancelled\n    const promise = new Promise(async (resolve, reject) => {\n      rejectCancelled = reject\n      while (true) {\n        let result\n        try {\n          result = await fn()\n          if (!completed) {\n            resolve(result)\n            completed = true\n          }\n          break\n        } catch (error) {\n          if (completed) {\n            break\n          }\n          if (n <= 0 || !error.isRetryableError) {\n            reject(error)\n            completed = true\n            break\n          }\n          n--\n        }\n        await waitRandom(minWait, maxWait)\n      }\n    })\n    return {\n      promise,\n      cancel: () => {\n        if (completed) return\n        completed = true\n        rejectCancelled(new CancelledError())\n      },\n    }\n  }\n  ","import { useActiveWeb3React } from '../../hooks/web3'\nimport { useCallback, useEffect, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from '../hooks'\nimport { useBlockNumber } from '../application/hooks'\nimport { updateBlockNumber } from '../application/actions'\nimport { checkedTransaction, finalizeTransaction } from './actions'\nimport { retry, RetryableError} from '../../utils/retry'\n\nconst RETRY_OPTIONS_BY_CHAIN_ID = {\n    42161: { n: 10, minWait: 250, maxWait: 1000 },\n    421611: { n: 10, minWait: 250, maxWait: 1000 },\n    69: { n: 10, minWait: 250, maxWait: 1000 },\n    10: { n: 10, minWait: 250, maxWait: 1000 },\n}\nconst DEFAULT_RETRY_OPTIONS = { n: 1, minWait: 0, maxWait: 0 }\n\nexport function shouldCheck(lastBlockNumber, tx) {\n    if (tx.receipt) return false\n    if (!tx.lastCheckedBlockNumber) return true\n    const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n    if (blocksSinceCheck < 1) return false\n    const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n    if (minutesPending > 60) {\n      // every 10 blocks if pending for longer than an hour\n      return blocksSinceCheck > 9\n    } else if (minutesPending > 5) {\n      // every 3 blocks if pending more than 5 minutes\n      return blocksSinceCheck > 2\n    } else {\n      // otherwise every block\n      return true\n    }\n  }\n\nexport default function Updater() {\n    const { chainId, library } = useActiveWeb3React()\n\n    const lastBlockNumber = useBlockNumber()\n    const dispatch = useAppDispatch()\n    const state = useAppSelector((state) => state.transactions)\n\n    const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n    const getReceipt = useCallback(\n        (hash) => {\n            if(!library || !chainId) throw new Error('No library or chainId')\n            const retryOptions = RETRY_OPTIONS_BY_CHAIN_ID[chainId] ?? DEFAULT_RETRY_OPTIONS\n            return retry(\n                () => \n                    library.getTransactionReceipt(hash).then((receipt) => {\n                        if (receipt === null) {\n                            console.debug('Retrying for hash', hash)\n                            throw new RetryableError() //An error to remain keep checking the receipt\n                        }\n                        return receipt\n                    }),\n                retryOptions\n            )\n        },\n        [chainId, library]\n    )\n    \n    useEffect(() => {\n        if(!chainId || !library || !lastBlockNumber) return\n\n        const cancels = Object.keys(transactions)\n        .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n        .map((hash) => {\n          const { promise, cancel } = getReceipt(hash)\n          promise\n            .then((receipt) => {\n              if (receipt) {\n                dispatch(\n                  finalizeTransaction({\n                    chainId,\n                    hash,\n                    receipt: {\n                      blockHash: receipt.blockHash,\n                      blockNumber: receipt.blockNumber,\n                      contractAddress: receipt.contractAddress,\n                      from: receipt.from,\n                      status: receipt.status,\n                      to: receipt.to,\n                      transactionHash: receipt.transactionHash,\n                      transactionIndex: receipt.transactionIndex,\n                    },\n                  })\n                )\n  \n                // the receipt was fetched before the block, fast forward to that block to trigger balance updates\n                if (receipt.blockNumber > lastBlockNumber) {\n                  dispatch(updateBlockNumber({ chainId, blockNumber: receipt.blockNumber }))\n                }\n              } else {\n                dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n              }\n            })\n            .catch((error) => {\n              if (!error.isCancelledError) {\n                console.error(`Failed to check transaction hash: ${hash}`, error)\n              }\n            })\n          return cancel\n        })\n  \n      return () => {\n        cancels.forEach((cancel) => cancel())\n      }\n    }, [chainId, library, transactions, lastBlockNumber, dispatch, getReceipt])\n  \n    return null\n}","import { useActiveWeb3React } from '../../hooks/web3'\nimport { useAppSelector } from '../hooks'\n\nexport function useBlockNumber() {\n    const { chainId } = useActiveWeb3React()\n\n    return useAppSelector((state) => state.application.blockNumber[chainId ?? -1])\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport store from './state';\nimport { Provider } from 'react-redux'\nimport ApplicationUpdater from './state/application/updater'\nimport TransactionUpdater from './state/transactions/updater'\n\nconst Web3ProviderNetwork = createWeb3ReactRoot('NETWORK')\n\nfunction getLibrary(provider) {\n  const library = new Web3Provider(provider)\n  // library.pollingInterval = 5000\n  return library\n}\n\nfunction Updaters() {\n  return (\n    <>\n      <ApplicationUpdater />\n      <TransactionUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <Web3ProviderNetwork getLibrary={getLibrary}>\n          <Updaters/>\n          <App />\n        </Web3ProviderNetwork>\n      </Web3ReactProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}